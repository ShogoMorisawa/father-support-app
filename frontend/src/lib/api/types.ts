/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/projects/{id}/complete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 案件を完了する（在庫減算・納品予定の整理）
         * @description 1操作=1トランザクション。project_items×materials.default_per_item を基に在庫を減算し、監査ログに逆操作を保存する。
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                    /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
                    "X-Correlation-Id"?: components["parameters"]["CorrelationId"];
                };
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProjectCompleteRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok: boolean;
                            data: {
                                projectId?: number;
                                /** @enum {string} */
                                status?: "in_progress" | "delivery_scheduled" | "completed";
                                /** @description 完了後に閾値を下回っている在庫（ゼロ件可） */
                                lowStock?: {
                                    materialId: number;
                                    name: string;
                                    /** Format: double */
                                    currentQty?: number;
                                    /** Format: double */
                                    thresholdQty?: number;
                                }[];
                            };
                        };
                    };
                };
                /** @description 楽観ロックなどの競合 */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ApiError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/projects/{id}/revert-complete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 作業完了の取り消し（Undo）
         * @description 監査ログのinverse情報をもとに、在庫を反転加算し状態を復元。
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                    /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
                    "X-Correlation-Id"?: components["parameters"]["CorrelationId"];
                };
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ApiOk"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/deliveries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 納品予定一覧（pendingのみ） */
        get: {
            parameters: {
                query?: {
                    status?: "pending" | "done" | "cancelled";
                    order?: "date.asc" | "date.desc";
                    /** @description 次ページ取得用カーソル */
                    cursor?: string;
                    limit?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DeliveriesListResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/deliveries/bulk-shift": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 納品予定を一括で±N日シフトする（Idempotency必須） */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                    /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
                    "X-Correlation-Id"?: components["parameters"]["CorrelationId"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DeliveriesBulkShiftRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DeliveriesBulkShiftResponse"];
                    };
                };
                /** @description Idempotencyキーなし など */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 対象なし */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description days=0 など不正 */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photos/presign": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** S3直PUTのための事前署名発行 */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PresignRequest"];
                };
            };
            responses: {
                /** @description 事前署名を返す */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PresignResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photos/attach": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** アップロード済みファイルの案件への添付登録 */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["AttachPhotoRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ApiOk"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 顧客一覧（簡易） */
        get: {
            parameters: {
                query?: {
                    order?: "name.asc" | "name.desc" | "created.desc";
                    limit?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomersListResponse"];
                    };
                };
            };
        };
        put?: never;
        /** 顧客を登録（Idempotency必須） */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerUpsertRequest"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok: boolean;
                            data: {
                                id?: number;
                            };
                        };
                    };
                };
                /** @description Idempotencyキーなし 等 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 不正な入力 */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 顧客詳細（統計付き） */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerDetailResponse"];
                    };
                };
                /** @description 見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** 顧客を更新（Idempotency必須） */
        patch: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                };
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CustomerUpsertRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomerDetailResponse"];
                    };
                };
                /** @description Idempotencyキーなし 等 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 不正な入力 */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/customers/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 顧客の簡易検索（名前・カナ・電話・部分一致） */
        get: {
            parameters: {
                query?: {
                    /** @description 検索語。未指定なら全件（上限limit） */
                    q?: string;
                    limit?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CustomersListResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers/merge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 顧客の重複統合
         * @description kana と phone が完全一致時は自動統合。それ以外は409で提案フェーズへ。
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        sourceCustomerId: number;
                        targetCustomerId: number;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ApiOk"];
                    };
                };
                /** @description 住所矛盾などで自動統合不可 */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ApiError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 直近の操作履歴（Undo画面用） */
        get: {
            parameters: {
                query?: {
                    limit?: number;
                    filter?: "inventory" | "task" | "project" | null;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @constant */
                            ok: true;
                            data: {
                                items: components["schemas"]["HistoryItem"][];
                            };
                            correlationId?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/estimates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 見積予定/履歴一覧
         * @description from/to を JST の日付(YYYY-MM-DD)として解釈。未指定時は直近の予定を返す実装を推奨。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 開始日（JST, YYYY-MM-DD） */
                    from?: string;
                    /** @description 終了日（JST, YYYY-MM-DD） */
                    to?: string;
                    /** @description 次ページ取得用カーソル */
                    cursor?: string;
                    limit?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EstimatesListResponse"];
                    };
                };
            };
        };
        put?: never;
        /** 見積予定の登録（電話受領→カレンダー反映） */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                    /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
                    "X-Correlation-Id"?: components["parameters"]["CorrelationId"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["EstimateCreateRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ApiOk"] & {
                            data?: {
                                estimate: components["schemas"]["Estimate"];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/estimates/{id}/complete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 見積結果の確定（契約成立/不成立） */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                    /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
                    "X-Correlation-Id"?: components["parameters"]["CorrelationId"];
                };
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["EstimateCompleteRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ApiOk"] & {
                            data?: {
                                estimate: components["schemas"]["Estimate"];
                                /** @description 成立時に生成された案件ID */
                                projectId?: number | null;
                            };
                        };
                    };
                };
                /** @description 楽観ロックなどの競合 */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ApiError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/materials": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 在庫一覧を取得 */
        get: {
            parameters: {
                query?: {
                    /** @description 並び順。既定は name.asc。 */
                    order?: "name.asc" | "name.desc" | "qty.asc" | "qty.desc";
                    limit?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MaterialsListResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/materials/low": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 低在庫（currentQty < thresholdQty）の一覧を取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MaterialsListResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/materials/{id}/receive": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 在庫を入庫（加算）する */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                    /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
                    "X-Correlation-Id"?: components["parameters"]["CorrelationId"];
                };
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["MaterialReceiveRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MaterialReceiveResponse"];
                    };
                };
                /** @description Idempotencyキーなし 等 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 在庫が存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 不正な数量 */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ホーム用の集約情報を取得する */
        get: {
            parameters: {
                query?: {
                    /** @description 基準日（YYYY-MM-DD, JST） */
                    date?: string;
                    estimatesLimit?: number;
                    tasksLimit?: number;
                    deliveriesLimit?: number;
                    historyLimit?: number;
                    lowLimit?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DashboardResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/projects/{id}/tasks/bulk-create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 複数タスクを一括作成し、プロジェクトの納品予定日を設定する（Idempotency必須） */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                    /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
                    "X-Correlation-Id"?: components["parameters"]["CorrelationId"];
                };
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TaskBulkCreateRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Idempotencyキーなし 等 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 不正 */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/deliveries/{id}/check": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 納品前チェック：指定タスクの準備済みフラグを切り替える（Idempotency必須） */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                    /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
                    "X-Correlation-Id"?: components["parameters"]["CorrelationId"];
                };
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DeliveryCheckRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Idempotencyキーなし 等 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 不正 */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tasks/{id}/complete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** タスクを完了にして在庫を減算（Idempotency必須） */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                    /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
                    "X-Correlation-Id"?: components["parameters"]["CorrelationId"];
                };
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Idempotencyキーなし 等 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 二重完了などの競合 */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 不正 */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tasks/{id}/revert-complete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** タスク完了を元に戻す（在庫を戻す・Idempotency必須） */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
                    "X-Idempotency-Key": components["parameters"]["IdempotencyKey"];
                    /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
                    "X-Correlation-Id"?: components["parameters"]["CorrelationId"];
                };
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Idempotencyキーなし 等 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 状態競合 */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Customer: {
            id: number;
            name: string;
            nameKana?: string | null;
            phone?: string | null;
            address?: string | null;
            createdAt?: string | null;
        };
        CustomerUpsertRequest: {
            name: string;
            nameKana?: string | null;
            phone?: string | null;
            address?: string | null;
        };
        CustomerDetailResponse: {
            ok: boolean;
            data: {
                customer?: components["schemas"]["Customer"];
                stats?: {
                    estimatesCount?: number;
                    projectsCount?: number;
                    activeProjectsCount?: number;
                    completedProjectsCount?: number;
                    deliveriesPendingCount?: number;
                };
            };
            correlationId?: string;
        };
        CustomersListResponse: {
            ok: boolean;
            data: {
                items?: components["schemas"]["Customer"][];
            };
            correlationId?: string;
        };
        DashboardResponse: {
            ok: boolean;
            data: {
                /** @description JSTの対象日（YYYY-MM-DD） */
                date?: string;
                estimates?: {
                    id?: number;
                    scheduledAt?: string;
                    status?: string;
                    accepted?: boolean | null;
                    customerName?: string | null;
                }[];
                tasks?: {
                    id?: number;
                    projectId?: number;
                    title?: string;
                    status?: string;
                    dueOn?: string | null;
                    customerName?: string | null;
                }[];
                deliveries?: {
                    id?: number;
                    projectId?: number;
                    date?: string;
                    status?: string;
                    title?: string;
                    customerName?: string | null;
                }[];
                lowStock?: {
                    count?: number;
                    items?: {
                        materialId?: number;
                        name?: string;
                        /** Format: double */
                        currentQty?: number;
                        /** Format: double */
                        thresholdQty?: number;
                    }[];
                };
                history?: {
                    items?: components["schemas"]["HistoryItem"][];
                };
            };
            correlationId?: string;
        };
        ApiOk: {
            /** @constant */
            ok: true;
            /** @description 任意のペイロード */
            data: unknown;
            correlationId?: string;
        };
        ApiError: {
            /** @constant */
            ok: false;
            error: {
                /** @example VALIDATION_ERROR */
                code: string;
                /** @example 入力内容を確認してください */
                message: string;
                fields?: {
                    [key: string]: string;
                };
            };
            correlationId?: string;
        };
        ProjectCompleteRequest: {
            /**
             * Format: date-time
             * @description UTCのISO8601
             */
            completedAt: string;
        };
        Project: {
            id: number;
            customerId: number;
            title: string;
            /** @enum {string} */
            status: "estimate" | "scheduled" | "in_progress" | "delivered" | "cancelled";
            /** Format: date */
            dueOn?: string;
            location?: string;
            notes?: string;
        };
        DeliveryTask: {
            taskId: number;
            projectId: number;
            customerName?: string;
            /** Format: date-time */
            date: string;
            /** @enum {string} */
            status: "pending" | "done" | "cancelled";
            /** @description 案件タイトル/概要 */
            title?: string;
        };
        CompleteResult: {
            /** @default true */
            ok: boolean;
            data?: {
                projectId?: number;
                /** @default true */
                completed: boolean;
                /** @example 作業を完了しました */
                message?: string;
            };
            correlationId?: string;
        };
        Error: {
            /** @default false */
            ok: boolean;
            error?: {
                /** @example conflict */
                code?: string;
                /** @example 操作が競合しました */
                message?: string;
            };
            correlationId?: string;
        };
        DeliveriesListResponse: {
            /** @constant */
            ok: true;
            data: {
                items: components["schemas"]["DeliveryTask"][];
                nextCursor?: string | null;
            };
            correlationId?: string;
        };
        DeliveriesBulkShiftRequest: {
            /** @description シフト日数。負数=前倒し、正数=延期。0は不可。 */
            days: number;
            /**
             * @default pending
             * @enum {string}
             */
            status: "pending" | "all";
            /** @description 対象期間の開始（YYYY-MM-DD） */
            from?: string;
            /** @description 対象期間の終了（YYYY-MM-DD） */
            to?: string;
            /** @description 明示的に対象IDを指定する場合。指定時は from/to を無視。 */
            ids?: number[];
            reason?: string | null;
        };
        DeliveriesBulkShiftResponse: {
            ok: boolean;
            data: {
                affected?: number;
                items?: {
                    id?: number;
                    oldDate?: string;
                    newDate?: string;
                }[];
            };
            correlationId?: string;
        };
        PresignRequest: {
            fileName: string;
            contentType: string;
            byteSize: number;
            /** @enum {string} */
            scope: "project" | "item";
            projectId: number;
            projectItemId?: number | null;
        };
        PresignResponse: {
            /** @constant */
            ok: true;
            data: {
                /** Format: uri */
                url: string;
                /** @enum {string} */
                method: "PUT";
                headers: {
                    [key: string]: string;
                };
                /** @description S3のオブジェクトキー（attachで渡す） */
                key: string;
            };
            correlationId?: string;
        };
        AttachPhotoRequest: {
            projectId: number;
            projectItemId?: number | null;
            /** @enum {string} */
            kind: "before" | "after" | "other";
            /** @description presignで返ったkey */
            blobKey: string;
        };
        HistoryItem: {
            id: number;
            /** @example project.complete */
            action: string;
            /** Format: date-time */
            createdAt: string;
            summary?: string;
            /** @description 逆操作API（method/path/payload） */
            inverse?: {
                /** @example POST */
                method?: string;
                /** @example /projects/123/revert-complete */
                path?: string;
                payload?: unknown;
            };
            /** @description 現在このイベントを元に戻せる場合に true。省略時は未判定。 */
            canUndo?: boolean;
        };
        Estimate: {
            id: number;
            /**
             * Format: date-time
             * @description JST想定の見積訪問日時(ISO)
             */
            scheduledAt: string;
            customerId?: number | null;
            customerName: string;
            phone: string;
            address: string;
            memo?: string | null;
            /** @enum {string} */
            status: "scheduled" | "completed" | "cancelled";
            /** @description 成立確定時に true/false。未確定は null。 */
            accepted?: boolean | null;
            /** @description 契約成立（accepted=true）の場合の見積合計（税抜/税込は運用で定義） */
            priceCents?: number | null;
            items?: components["schemas"]["EstimateItem"][];
            /** @description 成立時に紐づく案件ID（生成された場合） */
            projectId?: number | null;
        };
        EstimateItem: {
            materialId?: number | null;
            materialName: string;
            /** @description 使用予定数量。最大3桁小数（内部はDECIMAL(12,3)） */
            quantity: number;
        };
        EstimatesListResponse: {
            /** @constant */
            ok: true;
            data: {
                items: components["schemas"]["Estimate"][];
                nextCursor?: string | null;
            };
            correlationId?: string;
        };
        EstimateCreateRequest: {
            /**
             * Format: date-time
             * @description JSTの見積訪問日時(ISO)
             */
            scheduledAt: string;
            customerId?: number | null;
            customerName: string;
            phone: string;
            address: string;
            memo?: string | null;
        };
        EstimateCompleteRequest: {
            /** @description 成立なら true／不成立なら false */
            accepted: boolean;
            priceCents?: number | null;
            items?: components["schemas"]["EstimateItem"][];
        };
        /** @description 資材の在庫。数量は DECIMAL(12,3)。 */
        Material: {
            id: number;
            name: string;
            unit?: string | null;
            /**
             * Format: double
             * @description 現在在庫数（DECIMAL(12,3)相当）
             */
            currentQty: number;
            /**
             * Format: double
             * @description 在庫閾値（DECIMAL(12,3)相当）
             */
            thresholdQty: number;
            /** @description currentQty < thresholdQty の判定 */
            low: boolean;
        };
        MaterialsListResponse: {
            ok: boolean;
            data: {
                items?: components["schemas"]["Material"][];
            };
            correlationId?: string;
        };
        MaterialReceiveRequest: {
            /**
             * Format: double
             * @description 加算数量（DECIMAL(12,3)相当）。正の数。
             */
            quantity: number;
            note?: string | null;
        };
        MaterialReceiveResponse: {
            ok: boolean;
            data: {
                materialId?: number;
                name?: string;
                /** Format: double */
                currentQty?: number;
                /** Format: double */
                thresholdQty?: number;
                low?: boolean;
            };
            correlationId?: string;
        };
        LowStockItem: {
            materialId: number;
            name: string;
            currentQty: number;
            thresholdQty: number;
        };
        LowStockListResponse: {
            /** @constant */
            ok: true;
            data: {
                items: components["schemas"]["LowStockItem"][];
            };
            correlationId?: string;
        };
        TaskBulkCreateItem: {
            /** @description 例: 障子 張替 3枚 */
            title: string;
            kind?: string | null;
            materials?: {
                materialId?: number | null;
                materialName?: string | null;
                /** Format: double */
                qtyPlanned?: number | null;
            }[];
        };
        TaskBulkCreateRequest: {
            /** @description プロジェクトの納品予定日（YYYY-MM-DD, JST） */
            deliveryOn: string;
            items: components["schemas"]["TaskBulkCreateItem"][];
        };
        DeliveryCheckRequest: {
            taskId: number;
            prepared: boolean;
        };
    };
    responses: never;
    parameters: {
        /** @description 同一操作の再送を安全にするためのUUID。POST/PUT/PATCH/DELETEで必須。 */
        IdempotencyKey: string;
        /** @description クライアントが操作単位で発番する任意のUUID。サーバが応答にも反映。 */
        CorrelationId: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
